<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.songlin.mapper.UserAccountMapper">
  <resultMap id="BaseResultMap" type="cn.songlin.entity.UserAccount">
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="photo_url" jdbcType="VARCHAR" property="photoUrl" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="register_date" jdbcType="TIMESTAMP" property="registerDate" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  
  <select id="checkUserName" resultType="int">
  	SELECT count(1) FROM user_account where name = #{name} or nick_name = #{name};
  </select>
  
  <select id="redisUserInfo" resultType="cn.songlin.common.dto.LocalUser">
  	SELECT id,user_id userId,name,mobile_Phone mobilePhone,
  			photo_Url photoUrl,nick_Name nickName,create_Date createDate,
  			update_Date updateDate,user_Type userType,email,qq
  	FROM user_account where id  = #{id}
  </select>
  
  <select id="login" resultType="cn.songlin.common.dto.LocalUser">
  	SELECT id,user_id userId,name,mobile_Phone mobilePhone,password,
  			photo_Url photoUrl,nick_Name nickName,create_Date createDate,
  			update_Date updateDate,user_Type userType,email,qq
  	FROM user_account where 
  		password = #{userLoginDto.password} 
  		and (name = #{userLoginDto.userName} or nick_name = #{userLoginDto.userName} or mobile_phone = #{userLoginDto.userName});
  </select>
  
  <select id="queryList" resultMap="BaseResultMap">
	SELECT 
	  *
	FROM
	    community.user_account
	WHERE  1 = 1 
	<if test="searchKey != null">
		AND name LIKE #{searchKey} OR nick_name LIKE #{searchKey}
	</if>
  </select>
</mapper>